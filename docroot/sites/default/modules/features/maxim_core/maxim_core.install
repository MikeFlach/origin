<?php

/**
* @file
* Install, update and uninstall functions for the maxim_core module.
*/

/**
* Disable the page manager, panels, and mini panels modules
*/
function maxim_core_update_7067() {
  $module_list = array('page_manager','panels','panels_mini');

  module_disable($module_list);
}

/**
* Disable the googleanalytics module
*/
function maxim_core_update_7066() {
  $module_list = array('googleanalytics');

  module_disable($module_list);
}

/**
* Enable the core contact module and custom_contact(implements hook_form_alter)
*/
function maxim_core_update_7065() {
  $module_list = array('contact,custom_contact');

  module_enable($module_list);
}

/**
* Enable the field_collection_views module (needed for slideshow)
*/
function maxim_core_update_7064() {
  $module_list = array('field_collection_views');

  module_enable($module_list);
}

/**
* Enable the rdf module (needed for rss)
*/
function maxim_core_update_7063() {
  $module_list = array('rdf');

  module_enable($module_list);
}


/**
* Enable the menu_trail_taxonomy module
*/
function maxim_core_update_7062() {
  $module_list = array('menu_trail_taxonomy');

  module_enable($module_list);
}

/**
* Enable the redirect module
*/
function maxim_core_update_7061() {
  $module_list = array('redirect');

  module_enable($module_list);
}

/**
* Enable the googlenews module
*/
function maxim_core_update_7060() {
  $module_list = array('googlenews');

  module_enable($module_list);
}

/**
* enable the maxim_filters module
*/
function maxim_core_update_7059() {
  $module_list = array('maxim_filters');

  module_enable($module_list);
}

/**
* re-enable the context_ui module
*/
function maxim_core_update_7058() {
  $module_list = array('context_ui');

  module_enable($module_list);
}

/**
* enable the metatag_opengraph module
*/
function maxim_core_update_7057() {
  $module_list = array('metatag_opengraph');

  module_enable($module_list);
}

/**
* enable the metatag module
*/
function maxim_core_update_7056() {
  $module_list = array('metatag');

  module_enable($module_list);
}

/**
* enable the Global Redirect module
*/
function maxim_core_update_7055() {
  $module_list = array('globalredirect');

  module_enable($module_list);
}

/**
* disable the context_ui, delta_ui, delta color module
*/
function maxim_core_update_7054() {
  $module_list = array('delta_color','delta_ui','context_ui');

  module_disable($module_list);
}

/**
* disable the Akamai module
*/
function maxim_core_update_7053() {
  $module_list = array('akamai');

  module_disable($module_list);
}

/**
* install and enable the imagecrop module
*/
function maxim_core_update_7052() {
  $module_list = array('imagecrop');

  module_enable($module_list);
}

/**
* install and enable the wysiwyg_mediaembed custom module
*/
function maxim_core_update_7051() {
  $module_list = array('wysiwyg_mediaembed');

  module_enable($module_list);
}

/**
* change logging from dblog to syslog as recommended by acquia
*/
function maxim_core_update_7050() {
  $module_list = array('dblog');

  module_disable($module_list);

  $module_list = array('syslog');

  module_enable($module_list);
}

/**
* enable captcha and image_captcha module
*/
function maxim_core_update_7049() {
  $module_list = array('captcha','image_captcha');

  module_enable($module_list);
}

/**
* enable views_bulk_operations module
*/
function maxim_core_update_7048() {
  $module_list = array('views_bulk_operations');

  module_enable($module_list);
}

/**
* enable interstitial_float module
*/
function maxim_core_update_7047() {
  $module_list = array('interstitial_float');

  module_enable($module_list);
}

/**
* disable taxonomy_menu module
*/
function maxim_core_update_7046() {
  $module_list = array('taxonomy_menu');

  module_disable($module_list);
}

/**
* enable circmag_float module
*/
function maxim_core_update_7045() {
  $module_list = array('circmag_float');

  module_enable($module_list);
}

/**
* enable html5_tools module
*/
function maxim_core_update_7044() {
  $module_list = array('html5_tools');

  module_enable($module_list);
}


/**
* enable smartcrop module
*/
function maxim_core_update_7043() {
  $module_list = array('smartcrop');

  module_enable($module_list);
}

/**
* disable metatags and Meta tag API and Open Graph meta tags
*/
function maxim_core_update_7042() {
  $module_list = array('metatag','metatag_opengraph');

  module_disable($module_list);
}

/**
* Enable @fontyourface and local_fonts modules
*/
function maxim_core_update_7041() {
  $module_list = array('fontyourface','local_fonts');

  module_enable($module_list);
}


/**
* disable metatags and Meta tag API and Open Graph meta tags
*/
function maxim_core_update_7040() {
  $module_list = array('metatag','metatag_opengraph');

  module_disable($module_list);
}

/**
* enable metatags and Meta tag API and Open Graph meta tags
*/
function maxim_core_update_7039() {
  $module_list = array('metatag','metatag_opengraph');

  module_enable($module_list);
}

/**
* enable xml_sitemap, xml_sitemap_custom, xml_sitemap_node, xml_sitemap_taxonomy
*/
function maxim_core_update_7038() {
  $module_list = array('xmlsitemap','xmlsitemap_custom','xmlsitemap_node','xmlsitemap_taxonomy');

  module_enable($module_list);
}

/**
* enable menu_block
*/
function maxim_core_update_7037() {
  $module_list = array('menu_block');

  module_enable($module_list);
}

/**
* disable menu_block
*/
function maxim_core_update_7036() {
  $module_list = array('menu_block');

  module_disable($module_list);
}

/**
* disable FE_Nodequeue
*/
function maxim_core_update_7035() {
  $module_list = array('fe_nodequeue');

  module_disable($module_list);
}

/**
* enable smartqueue module
*/
function maxim_core_update_7034() {
  $module_list = array('smartqueue');

  module_enable($module_list);
}

/**
* enable webform module for creating of user-submitted forms
*/
function maxim_core_update_7033() {
  $module_list = array('webform');

  module_enable($module_list);
}

/**
* enable FE_Nodequeue -- Allows nodequeue structure to be exported
*/
function maxim_core_update_7032() {
  $module_list = array('fe_nodequeue');

  module_enable($module_list);
}

/**
* Add default search pages again
*/
function maxim_core_update_7031() {
 // Add a taxonomy search page to the database
  $search_page = apachesolr_search_page_load('taxonomy_search');
  if (empty($search_page)) {
    $settings = array(
      'apachesolr_search_search_type' => 'tid',
      'apachesolr_search_per_page' => 10,
      'apachesolr_search_browse' => 'results',
      'apachesolr_search_spellcheck' => FALSE,
      'apachesolr_search_search_box' => FALSE,
     );
    $settings = serialize($settings);

    $fields = array(
      'page_id' => 'taxonomy_search',
      'label' => 'Taxonomy Search',
      'description' => 'Search all items with given term',
      'search_path' => 'taxonomy/term/%',
      'env_id' => '',
      'page_title' => '%value',
      'settings' => $settings,
    );
    db_insert('apachesolr_search_page')->fields($fields)->execute();
  }

  // Make sure the default core search page is installed.
  $search_page = apachesolr_search_page_load('core_search');
  if (empty($search_page)) {
    // Add Default search page (core search)
    // This is a duplication from update_7004 but it is intended
    // so future changes are possible without breaking the update
    $settings = array(
      'apachesolr_search_search_type' => 'custom',
      'apachesolr_search_per_page' => 10,
      'apachesolr_search_browse' => 'browse',
      'apachesolr_search_spellcheck' => TRUE,
      'apachesolr_search_not_removable' => TRUE,
      'apachesolr_search_search_box' => TRUE,
    );
    $settings = serialize($settings);

    $fields = array(
      'page_id' => 'core_search',
      'label' => 'Core Search',
      'description' => 'Core Search',
      'search_path' => 'search/site',
      'env_id' => 'solr',
      'page_title' => 'Site',
      'settings' => $settings,
    );
    db_insert('apachesolr_search_page')->fields($fields)->execute();
  }

  $active = variable_get('search_active_modules', array('node', 'user'));
  $active[] = 'apachesolr_search';
  variable_set('search_active_modules', array_unique($active));

}

/**
* enable nodequeue and views_json
*/
function maxim_core_update_7030() {
  $module_list = array('views_json','nodequeue');

  module_enable($module_list);
}

/**
* Add default search pages
*/
function maxim_core_update_7029() {
 // Add a taxonomy search page to the database
  $search_page = apachesolr_search_page_load('taxonomy_search');
  if (empty($search_page)) {
    $settings = array(
      'apachesolr_search_search_type' => 'tid',
      'apachesolr_search_per_page' => 10,
      'apachesolr_search_browse' => 'results',
      'apachesolr_search_spellcheck' => FALSE,
      'apachesolr_search_search_box' => FALSE,
     );
    $settings = serialize($settings);

    $fields = array(
      'page_id' => 'taxonomy_search',
      'label' => 'Taxonomy Search',
      'description' => 'Search all items with given term',
      'search_path' => 'taxonomy/term/%',
      'env_id' => '',
      'page_title' => '%value',
      'settings' => $settings,
    );
    db_insert('apachesolr_search_page')->fields($fields)->execute();
  }

  // Make sure the default core search page is installed.
  $search_page = apachesolr_search_page_load('core_search');
  if (empty($search_page)) {
    // Add Default search page (core search)
    // This is a duplication from update_7004 but it is intended
    // so future changes are possible without breaking the update
    $settings = array(
      'apachesolr_search_search_type' => 'custom',
      'apachesolr_search_per_page' => 10,
      'apachesolr_search_browse' => 'browse',
      'apachesolr_search_spellcheck' => TRUE,
      'apachesolr_search_not_removable' => TRUE,
      'apachesolr_search_search_box' => TRUE,
    );
    $settings = serialize($settings);

    $fields = array(
      'page_id' => 'core_search',
      'label' => 'Core Search',
      'description' => 'Core Search',
      'search_path' => 'search/site',
      'env_id' => 'solr',
      'page_title' => 'Site',
      'settings' => $settings,
    );
    db_insert('apachesolr_search_page')->fields($fields)->execute();
  }

  $active = variable_get('search_active_modules', array('node', 'user'));
  $active[] = 'apachesolr_search';
  variable_set('search_active_modules', array_unique($active));

}

/**
* disable autocomplete_deluxe
*/
function maxim_core_update_7028() {
  $module_list = array('autocomplete_deluxe');

  module_disable($module_list);
}

/**
* Enable apachesolr_autocomplete module.  For solr search.
*/
function maxim_core_update_7027() {
  $module_list = array('apachesolr_autocomplete');

  module_enable($module_list);
}

/**
* Enable facet api module.  For solr search.
*/
function maxim_core_update_7026() {
  $module_list = array('facetapi');

  module_enable($module_list);
}

/**
* Enable acquia_search, acquia_agent, acquia_spi. Used for Solr search
*/
function maxim_core_update_7025() {
  $module_list = array('acquia_search','acquia_agent','acquia_spi');

  module_enable($module_list);
}


/**
* Enable date, date_api, date_popup, and scheduler
*/
function maxim_core_update_7024() {
  $module_list = array('date','date_api','date_popup','scheduler');

  module_enable($module_list);
}

/**
* Enable wysiwyg with ckEditor
*/
function maxim_core_update_7023() {
  $module_list = array('wysiwyg');

  module_enable($module_list);
}

/**
* Enable taxonomy menu
*/
function maxim_core_update_7022() {
  $module_list = array('taxonomy_menu');

  module_enable($module_list);
}

/**
* Enable content_taxonomy and content_taxonomy_autocomplete
*/
function maxim_core_update_7021() {
  $module_list = array('content_taxonomy','content_taxonomy_autocomplete');

  module_enable($module_list);
}

/**
* Install and Enable autocomplete_deluxe
*/
function maxim_core_update_7020() {
  $module_list = array('autocomplete_deluxe');

  module_enable($module_list);
}

/**
* Disable the Twitter, Twitter Actions and Twitter Post modules.
*/
function maxim_core_update_7019() {
  $module_list = array('twitter','twitter_actions','twitter_post');

  module_disable($module_list);
}

/**
* Enable Delta, Delta Blocks, & Delta Color modules.
*/
function maxim_core_update_7018() {
  $module_list = array('delta','delta_color','delta_blocks');

  module_enable($module_list);
}

/**
* Enable Akamai module.
*/
function maxim_core_update_7017() {
  $module_list = array('akamai');

  module_enable($module_list);
}

/**
* Enable Maxim Base theme.
*/
function maxim_core_update_7016() {
  $module_list = array('maxim_base');

  theme_enable($module_list);
}

 /**
* Enable Maxim dart, dart_scheduler & dart_taxonomy modules.
*/
function maxim_core_update_7015() {
  $module_list = array('dart','dart_scheduler','dart_taxonomy');

  module_enable($module_list);
}

 /**
* Enable Maxim Google Analytics Module.
*/
function maxim_core_update_7014() {
  $module_list = array('googleanalytics');

  module_enable($module_list);
}

/**
* Enable Maxim Common module.
*/
function maxim_core_update_7013() {
  $module_list = array('maxim_common');

  module_enable($module_list);
}

/**
* Enable the Twitter, Twitter Actions and Twitter Post modules.
*/
function maxim_core_update_7012() {
  $module_list = array('twitter','twitter_actions','twitter_post');

  module_enable($module_list);
}



/**
* Enable the Boxes module.
*/
function maxim_core_update_7011() {
  $module_list = array('boxes');

  module_enable($module_list);
}

/**
* Enable maxim_omega_base and disable the maxim_base theme.
*/
function maxim_core_update_7010() {

  $module_list = array('maxim_omega_base');

  theme_enable($module_list);

  $module_list = array('maxim_base');

  theme_disable($module_list);
}

/**
* Disable the Bartik theme.
*/
function maxim_core_update_7009() {
  $module_list = array('bartik');

  theme_disable($module_list);
}

/**
* Enable the maxim_base theme.
*/
function maxim_core_update_7008() {
  $module_list = array('maxim_base');

  theme_enable($module_list);
}


/**
* Enable the maxim_base theme.
*/
function maxim_core_update_7007() {
  $module_list = array('maxim_base');

  module_enable($module_list);
}


/**
* Enable the File Entity and Field Collection modules.
*/
function maxim_core_update_7006() {
  $module_list = array('file_entity', 'field_collection');

  module_enable($module_list);
}

/**
* Enable the Context module.
*/
function maxim_core_update_7005() {
  $module_list = array('context');

  module_enable($module_list);
}

/**
* Enable the Views Content and Mini Panels module.
*/
function maxim_core_update_7004() {
  $module_list = array('views_content','panels_mini');

  module_enable($module_list);
}

/**
* Enable the Link module.
*/
function maxim_core_update_7003() {
  $module_list = array('link');

  module_enable($module_list);
}

/**
* Enable the Poll module.
*/
function maxim_core_update_7002() {
  $module_list = array('poll');

  module_enable($module_list);
}

/**
* Enable the Panels module.
*/
function maxim_core_update_7001() {
  $module_list = array('panels');

  module_enable($module_list);
}

/**
* Enable the Node References, Page Manager and Views modules.
*/
function maxim_core_update_7000() {
 $module_list = array('node_reference','page_manager', 'views');

 module_enable($module_list);
}

