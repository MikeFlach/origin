<?php

/**
 * Implements hook_field_formatter_info().
 */
function maxim_filters_field_formatter_info() {
  return array(
    'maxim_video_player' => array(
      'label' => t('Maxim Video Player'),
      'field types' => array('file'),
    ),
    'comma_separated_list' => array(
      'label' => t('Comma Separated List'),
      'field types' => array('taxonomy_term_reference'),
    ),
    'comma_sep_list_w_and' => array(
      'label' => t('Comma Separated List with "and"'),
      'field types' => array('taxonomy_term_reference'),
    ),
    'jtweetsanywhere' => array(
      'label' => t('jTweetsAnywhere twitter module'),
      'field types' => array('taxonomy_term_reference', 'text'),
      'settings' => array( 'count' => 5,),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function maxim_filters_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  if ($display['type'] == 'jtweetsanywhere' ) {
    $element['count'] = array(
      '#title' => t('count'),
      '#type' => 'textfield',
      '#size' => 3,
      '#default_value' => $settings['count'],
      '#element_validate' => array('_element_validate_integer_positive'),
      '#required' => TRUE,
    );
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function maxim_filters_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = '';
  if ($display['type'] == 'jtweetsanywhere' ) {
    $summary = t('Count: @count tweets', array('@count' => $settings['count']));
  }
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function maxim_filters_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $og_element = array();
  $settings = $display['settings'];
  switch ($display['type']) {
    case 'comma_separated_list':
      $term_list = array();
      foreach ($items as $delta => $item) {
        $term_list[] = taxonomy_term_load($item['tid'])->name;
      }
      if (count($term_list) > 0) {
        $element[$delta]['#markup'] = implode(', ', $term_list);
      }
    break;
    case 'comma_sep_list_w_and':
      $strList = '';
      $ct = 0;
      foreach ($items as $delta => $item) {
        $term = taxonomy_term_load($item['tid'])->name;
        $ct++;
        if ($ct == 1) {
          $strList .= $term;
        }
        else if (count($items) > 2) {
          $strList .= ', ' . $term;
        }
        else if (count($items) == 2 && $ct == 2) {
          $strList .= ' and ' . $term;
        }
      }
     if (strlen($strList)) {
       $element[$delta]['#markup'] = $strList;
     }
    break;
    case 'maxim_video_player':
      // Common case: each value is displayed individually in a sub-element
      // keyed by delta. The field.tpl.php template specifies the markup
      // wrapping each value.
      foreach ($items as $delta => $item) {
        if(!empty($item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'])) {
          //print 5min player script as well as the current node 5min ID value
            $element[$delta]['#markup'] = '<script type="text/javascript" src="http://pshared.5min.com/Scripts/PlayerSeed.js?sid=764&amp;width=620&amp;height=348&amp;shuffle=0&amp;sequential=1&amp;autoStart=true&amp;playList='
              . $item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'] . '"></script>';
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:type',
            'content' => 'video',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:type');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video',
            'content' => 'http://embed.5min.com/' . $item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'] . '/&sid=764&vcdBgColor=%23313131&colorPallet=%23ED1C24&playerActions=696&isAutoStart=true',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:type',
            'content' => 'application/x-shockwave-flash',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_type');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:width',
            'content' => '620',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_width');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:height',
            'content' => '348',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_height');
        }
        elseif (!empty($item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'])) {
        //print the legacy flash player with a direct hardcode to the generic video stub and flv cdn file path
          $element[$delta]['#markup'] = '<object width="620" height="348" id="FiveminPlayer" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000">
            <param name="allowfullscreen" value="true" /><param name="allowScriptAccess" value="always" />
            <param name="movie" value="http://embed.5min.com/399695185/&sid=764&isAutoStart=true" /><param name="flashvars" value="tpvVideoUrl='
            . $item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'] . '" /><param name="wmode" value="window" />
            <embed name="FiveminPlayer" src="http://embed.5min.com/399695185/&sid=764&isAutoStart=true&tpvVideoUrl='
            . $item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'] . '" type="application/x-shockwave-flash" width="620" height="348" allowfullscreen="true" allowScriptAccess="always" wmode="window" ></embed ></object>';
        }
        else {
          $element[$delta]['#markup'] = t('Error: Video Not Found');
        }
      }
      break;
      case 'jtweetsanywhere':
        if (!empty($items)) {
          $handles = array();
          foreach ($items as $delta => $item) {
            if ($field['type'] == 'taxonomy_term_reference') {
              $handles[] = taxonomy_term_load($item['tid'])->field_twitter[LANGUAGE_NONE][0]['safe_value'];
            } else {
              preg_match( '/(\w+)#?\s?$/', t($item['value']), $handle);
              $handles[] = $handle[1];
            }
          }
          if (empty($handles)){
            break;
          } elseif (count($handles) > 1) {
            $handles = json_encode($handles);
          } else {
            $handles = "'{$handles[0]}'";
          }

          $jta_js = "(function($){
              $(document).ready(function(){
                $('#tweetFeed').jTweetsAnywhere({
                  username: {$handles},
                  count: {$settings['count']},
                  showTweetFeed: {
                    showProfileImages: true,
                    showUserScreenNames: true,
                    showUserFullNames: true,
                    showActionReply: true,
                    showActionRetweet: true,
                    showActionFavorite: true
                },
                autorefresh: {
                  mode: 'auto-insert',
                  interval: 30,
                  duration: -1
                }
              });
            });
          })(jQuery)";

        $jta_path = libraries_get_path('jtweetsanywhere');
        drupal_add_js( $jta_path . '/jquery.jtweetsanywhere-1.3.1.min.js', 'file' );
        drupal_add_css( $jta_path . '/jquery.jtweetsanywhere-1.3.1.css', 'file');
        $element[0]['#markup'] = '<div id="tweetFeed"></div>';
        drupal_add_js($jta_js, 'inline');
      }
      break;
  }
  return $element;
}
