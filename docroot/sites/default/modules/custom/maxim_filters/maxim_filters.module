<?php

/**
 * Implements hook_field_formatter_info().
 */
function maxim_filters_field_formatter_info() {
  return array(
    'maxim_video_player' => array(
      'label' => t('Maxim Video Player'),
      'field types' => array('file'),
    ),
    'comma_separated_list' => array(
      'label' => t('Comma Separated List'),
      'field types' => array('taxonomy_term_reference'),
    ),
    'comma_sep_list_w_and' => array(
      'label' => t('Comma Separated List with "and"'),
      'field types' => array('taxonomy_term_reference'),
    ),
    'embedded_slideshow' => array(
      'label' => t('Embed related slideshow'),
      'field types' => array('node_reference'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function maxim_filters_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $og_element = array();
  $settings = $display['settings'];
  switch ($display['type']) {
    case 'comma_separated_list':
      $term_list = array();
      foreach ($items as $delta => $item) {
        $term_list[] = taxonomy_term_load($item['tid'])->name;
      }
      if (count($term_list) > 0) {
        $element[$delta]['#markup'] = implode(', ', $term_list);
      }
    break;
    case 'comma_sep_list_w_and':
      $strList = '';
      $ct = 0;
      foreach ($items as $delta => $item) {
        $term = taxonomy_term_load($item['tid'])->name;
        $ct++;
        if ($ct == 1) {
          $strList .= $term;
        }
        else if (count($items) > 2) {
          $strList .= ', ' . $term;
        }
        else if (count($items) == 2 && $ct == 2) {
          $strList .= ' and ' . $term;
        }
      }
     if (strlen($strList)) {
       $element[$delta]['#markup'] = $strList;
     }
    break;
    case 'maxim_video_player':
      // Common case: each value is displayed individually in a sub-element
      // keyed by delta. The field.tpl.php template specifies the markup
      // wrapping each value.
      foreach ($items as $delta => $item) {
        if(!empty($item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'])) {
          //print 5min player script as well as the current node 5min ID value
            $element[$delta]['#markup'] = '<script type="text/javascript" src="http://pshared.5min.com/Scripts/PlayerSeed.js?sid=764&amp;width=620&amp;height=348&amp;shuffle=0&amp;sequential=1&amp;autoStart=true&amp;playList='
              . $item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'] . '"></script>';
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:type',
            'content' => 'video',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:type');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video',
            'content' => 'http://embed.5min.com/' . $item['field_media_5min_id'][LANGUAGE_NONE]['0']['value'] . '/&sid=764&vcdBgColor=%23313131&colorPallet=%23ED1C24&playerActions=696&isAutoStart=true',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:type',
            'content' => 'application/x-shockwave-flash',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_type');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:width',
            'content' => '620',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_width');
          $og_element = array(
            '#tag' => 'meta', // The #tag is the html tag - <meta />
            '#attributes' => array( // Set up an array of attributes inside the tag
            'property' => 'og:video:height',
            'content' => '348',
            ),
          );
          drupal_add_html_head($og_element, 'maximmeta_og:video_height');
        }
        elseif (!empty($item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'])) {
        //print the legacy flash player with a direct hardcode to the generic video stub and flv cdn file path
          $element[$delta]['#markup'] = '<object width="620" height="348" id="FiveminPlayer" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000">
            <param name="allowfullscreen" value="true" /><param name="allowScriptAccess" value="always" />
            <param name="movie" value="http://embed.5min.com/399695185/&sid=764&isAutoStart=true" /><param name="flashvars" value="tpvVideoUrl='
            . $item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'] . '" /><param name="wmode" value="window" />
            <embed name="FiveminPlayer" src="http://embed.5min.com/399695185/&sid=764&isAutoStart=true&tpvVideoUrl='
            . $item['field_media_cdn_url'][LANGUAGE_NONE]['0']['value'] . '" type="application/x-shockwave-flash" width="620" height="348" allowfullscreen="true" allowScriptAccess="always" wmode="window" ></embed ></object>';
        }
        else {
          $element[$delta]['#markup'] = t('Error: Video Not Found');
        }
      }
    break;
    case 'embedded_slideshow':
       foreach ($items as $delta => $item) {

        $ss_view_name = 'slideshow_json';
        $ss_display = 'slideshow_hth_profile';

        $element[$delta]['#markup'] = '<div class="gallery anythingSlider"><div class="wrapper"><ul></ul></div></div><div id="slideshowBody" style="margin-top:15px"></div>';

        $view_result = views_embed_view($ss_view_name, $ss_display, $item['nid']);

        $json_data = '';
        if (strlen($view_result)) {
          preg_match('/\<div class\=[\"]{0,1}view-content[\"]{0,1}\>(.*?)\<\/div\>/s', $view_result, $slideshow_data);
          $json_data = json_decode(trim($slideshow_data[1]), TRUE);

          $ss_lib_path = libraries_get_path('slideshow');
          drupal_add_js($ss_lib_path.'/flowplayer-3.2.6.min.js');
          drupal_add_js($ss_lib_path.'/jquery.anythingslider.js');
          drupal_add_js($ss_lib_path.'/jquery.easing.1.2.js');
          drupal_add_js($ss_lib_path.'/slideshow_display.js');
          drupal_add_css($ss_lib_path.'/slider.css');
          drupal_add_css($ss_lib_path.'/main_slideshow_hth.css');
          drupal_add_js(array('Maxim' => array('hottie' => array('hottie_position' => 0))), 'setting');

          for($i = 0; $i < count($json_data); $i++) {
            $json_data[$i]['type'] = determine_media_type(pathinfo($json_data[$i]['src'], PATHINFO_EXTENSION));
            $json_data[$i]['src'] = replace_image_path($json_data[$i]['src'], 'ss_main');
            $json_data[$i]['thumb'] = replace_image_path($json_data[$i]['thumb'], 'ss_carousel');
            $json_data[$i]['attribution'] = '';
            $json_data[$i]['slide_title'] = '';
          }

          $js = <<<EOD
            // On Document load
            jQuery(function () {
              loadSlideShowImages(1);
              galleryLink = slideshow[0].galleryLink.toLowerCase();
              jQuery(".anythingSlider").parent().prepend("<div id='fullscreenLink'><a href='" + replaceChannelPath(slideshow[0].fullscreenLink) + "'><img class='fullScreenLink' src='/sites/default/libraries/slideshow/images/icon_fullscreen.gif' />FULL SCREEN</a></div><div class='clear-both'>&nbsp;</div>");
            });
EOD;
          drupal_add_js("var slideshow=".str_replace("'", '&apos;', json_encode($json_data)).';', 'inline');
          drupal_add_js($js, 'inline');
        }
       }
  }
  return $element;
}

