<?php
// $Id$

function hth_voting_resource_services_resources() {
  return array(
   'vote' => array(
     'retrieve' => array(
       'help' => 'Retrieves vote count for a given hth nid',
       'file' => array('file' => 'inc', 'module' => 'hth_voting_resource'),
       'callback' => '_hth_voting_resource_retrieve',
       'access callback' =>  '_hth_voting_resource_access',
       'args' => array(
         array(
           'name' => 'nid',
           'type' => 'int',
           'description' => 'The nid of the hth',
           'source' => array('path' => '0'),
           'optional' => FALSE,
         ),
       ),
     ),
     'create' => array(
       'help' => 'Creates a vote for a given hth nid',
       'file' => array('file' => 'inc', 'module' => 'hth_voting_resource'),
       'callback' => '_hth_voting_resource_create',
       'access callback' => '_hth_voting_resource_access',
       'args' => array(
         array(
           'name' => 'data',
           'type' => 'array',
           'description' => 'The hth nid/user id',
           'source' => 'data',
           'optional' => FALSE,
         ),
       ),
     ),
   ),
  );
}

function _hth_voting_resource_access($args) {
  return true;
}

function voteresource_perm() {
  return array(
    'hth_voting_resource resource vote count',
  );
}

function hth_voting_resource_get_vote_count($nid) {
  $criteria = array();
  $criteria['entity_id'] = $nid;

  $vote_count = votingapi_select_votes($criteria);

  return ($vote_count);
}

function hth_voting_resource_write_vote($vote_data) {
  $vote = array();
  $criteria = array();

  $vote['entity_type'] = 'node';
  $vote['value_type'] = 'points';
  $vote['entity_id'] = $vote_data['nid'];
  $vote['value'] = 1;
  $vote['uid'] = $vote_data['uid'];
  $vote['tag'] = 'vote';

  $votingapi_set_votes = votingapi_set_votes($vote, $criteria);

  if (is_array($votingapi_set_votes)) {
    return (1);
  }
  else {
    return (services_error('Error adding vote', 406));
  }
}

function hth_voting_resource_block_info() {
  $contest_week = variable_get('hth_contest_week', 0);

  $blocks['hth_nav_header'] = array(
    'info' => t("Header with links above/below all hometown hottie pages. Current Weel($contest_week)")
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hth_voting_resource_block_view($delta = '') {
  $contest_week = variable_get('hth_test_var', 0);

  $block = array();
  if ($delta == 'hth_nav_header') {
    $block['subject'] = t('Hometown Hotties');
    $block['content'] = array(
      '#markup' => '<div id="hth_header">Maxim Hometown Hottie 2013 Header</div>',
      '#title' => t(''),
    );
  }
  return $block;
}

