<?php

/*
 * You must implement hook_migrate_api(), setting the API level to 2, for
 * your migration classes to be recognized by the Migrate module.
 */
function migrate_maxim_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}


/*
 * Maxim Process
 */
class Maxim_Process{
	
  public function __construct() {
    $this->channelObj = new Maxim_Channels();
    $this->authorObj = new Maxim_Authors();
    $this->formatObj = new Maxim_Format();
   
    $this->channelObj->channelMapping();
  }

	public function prepareContent($current_row){
    $source_id = $current_row->guid;

    $current_row->body = $this->formatObj->formatBody($current_row->body);
    $current_row->channel = $this->channelObj->getChannel($current_row->channel);
    $current_row->author = $this->authorObj->format($current_row->author);
    $current_row->tags = $this->formatObj->formatTags($current_row->tags);
    
    $new_channel = $this->channelObj->getChannelFromTags($current_row->tags);
    if($new_channel != ''){
      $current_row->channel = $new_channel;
    }
    
    $current_row->column = $this->channelObj->getColumn($current_row->channel);
    
    return $current_row;
	}
	
	
	public function rollbackVocabulary(){
	  // Delete taxonomy terms from these vocabularies
    $vocab_names = array('content_authors','freeform_tags','columns');

    $terms = db_query("SELECT tid FROM taxonomy_term_data t LEFT JOIN taxonomy_vocabulary v
       ON v.vid = t.vid WHERE v.machine_name IN (:vocabs)", array(':vocabs'=>$vocab_names));
    foreach ($terms as $term) {
      taxonomy_term_delete($term->tid);
    }
	}
	
}

/* 
 * Maxim Format Class
 */
class Maxim_Format {
  /*
   * Format Body
   */ 
  public function formatBody($body){
    // Modify body CDN URL - Search and replace /file_source with cdn URL 
    $searchExp = '/file_source';
    $cdnURL = 'http://cdn2.maxim.com/maxim/files/maxim2';
    $body = str_replace($searchExp, $cdnURL, $body);
    
    // Remove Related Links
    $body = preg_replace('/(<p>|<br>|<b>|<i>|\n)*Related Links.*/is','',$body);
    
    return $body;
   }
  
  /* 
   * Format tags
   */
  public function formatTags($tags){
    $tags = str_replace(' and ',', ', $tags);
    $tags = str_replace(', ', ',', $tags);
    $tags = strtolower($tags);
    // Remove multiple commas
    $tags = str_replace(',,', ',', $tags);
    // Remove last comma, if any
    $tags = rtrim($tags, ","); 

    return trim($tags);
  }

}

/*
 * Authors Class
 */
class Maxim_Authors {
  public function format($author){
    $author = str_replace(' and ',',', $author);
    $author = str_replace(', ',',', $author);
    $strAuthor = $author;
    switch ($author){
      case 'Maxim':
      case 'Maxim Staff,Liquor.com':
      case 'Maxim Staff from Liquor.com':
      case 'Maxim Staff,HeavyMMA.com':
      case 'Maxim Staff1':
      case 'Maxim staff':
      case 'maxim staff':
      case 'Maxim.com Staff':
      case 'Maxim.com staff':
      case 'maxim.com staff':
      case 'n/a':
      case 'G.':
        $strAuthor = 'Maxim Staff';
        break;
      case 'Bllender Blog':
        $strAuthor = 'Blender Blog';
        break;
      case 'Cory':
        $strAuthor = 'Cory Jones';
        break;
      case 'Dan bova':
        $strAuthor = 'Dan Bova';
        break;
      case 'Eric Spitznage':
        $strAuthor = 'Eric Spitznagel';
        break;
      case 'Gerasimos':
        $strAuthor = 'Gerasimos Manolatos';
        break;
      case 'Jessica Kind':
        $strAuthor = 'Jessica King';
        break;
      case 'Joanna':
        $strAuthor = 'Joanna Krupa';
        break;
      case 'John Devore':
        $strAuthor = 'John DeVore';
        break;
      case 'John Devore,Krista Soriano':
        $strAuthor = 'John DeVore,Krista Soriano';
        break;
      case 'Jordan':
        $strAuthor = 'Jordan Burchette';
        break;
      case 'Larry':
        $strAuthor = 'Larry Dobrow';
        break;
      case 'Nick Leftely':
        $strAuthor = 'Nick Leftley';
        break;
      case 'Paul':
        $strAuthor = 'Paul Ulane';
        break;
      case 'Stan':
      case 'Stan H':
        $strAuthor = 'Stan Horaczek';
        break;
      case 'T.J. Dietsch':
        $strAuthor = 'TJ Dietsch'; 
        break;
      case 'fatpickle':
        $strAuthor = 'Fatpickle';
        break; 
    }
    return trim($strAuthor);
  }

}



/*
 * Channels Class
 */
class Maxim_Channels {
	private $cMap = array();
	
  /*
   * Get Column based on Channel
   */
  public function getColumn($channel){
    $strColumn = '';
    
    switch($channel){
      case 'Beat This Caption':
        $strColumn = $channel;
        break;
      case 'Dirty Briefs':
        $strColumn = 'The Dump Blog';
        break;
    }
    
    return $strColumn;
  }
	
  /*
   * Get Channel based on tags
   */
  public function getChannelFromTags($tags){
    $strChannel = '';
    if(stripos($tags, 'found porn') !== false){
      $strChannel = 'Found Porn';
    } 

    return $strChannel;
  }
	
  /*
   * Get channel from mapping
   */
	public function getChannel($channel){
		if(array_key_exists($channel,$this->cMap)){
			return $this->cMap[$channel];  
    } else {
      return $channel;
		}
	}
	
  public function channelMapping(){
    
    $this->cMap['Home/GAMING'] = 'Gaming';
    $this->cMap['Home/GAMING/Articles'] = 'Gaming';
    $this->cMap['Home/GAMING/BFG'] = 'Gaming';
    $this->cMap['Home/GAMING/Features'] = 'Gaming';
    $this->cMap['Home/GAMING/Maxim Games'] = 'Gaming';
    $this->cMap['Home/GAMING/Reviews'] = 'Gaming';
    $this->cMap['Home/GAMING/Slideshows'] = 'Gaming';
    $this->cMap['Home/GAMING/Videos'] = 'Gaming';
    
    $this->cMap['Home/GIRLS'] = 'Girls';
    $this->cMap['Home/GIRLS/Articles'] = 'Girls';
    $this->cMap['Home/GIRLS/Beach Watch'] = 'Girls of Maxim';
    $this->cMap['Home/GIRLS/Girls of Maxim'] = 'Girls of Maxim';
    $this->cMap['Home/GIRLS/Hometown Hotties'] = 'Hometown Hotties';
    $this->cMap['Home/GIRLS/Hot 100'] = 'Hot 100';
    $this->cMap['Home/GIRLS/Meet Other Singles'] = 'Girls';
    $this->cMap['Home/GIRLS/Sex'] = 'Sex & Relationships';
    $this->cMap['Home/GIRLS/Slideshows'] = 'Girls';
    $this->cMap['Home/GIRLS/Today\'s Girl'] = 'Today\'s Girl';
    $this->cMap['Home/GIRLS/Videos'] = 'Girls';
    $this->cMap['Home/Home/GIRLS/Today\'s Girl/Today\'s Girl Subchannel 1'] = 'Girls';
    
    $this->cMap['Home/HUMOR'] = 'Funny';
    $this->cMap['Home/HUMOR/Animated GIFs'] = 'Stupid Clips';
    $this->cMap['Home/HUMOR/Articles'] = 'Funny';
    $this->cMap['Home/HUMOR/Beat This Caption'] = 'Beat This Caption';
    $this->cMap['Home/HUMOR/Features'] = 'Funny';
    $this->cMap['Home/HUMOR/Jokes'] = 'Jokes';
    $this->cMap['Home/HUMOR/Slideshows'] = 'Funny';
    $this->cMap['Home/HUMOR/Videos'] = 'Funny';
    $this->cMap['Home/Home/HUMOR/Beat This Caption/magazine'] = 'Beat This Caption';
    $this->cMap['Home/Home/HUMOR/Beat This Caption/online'] = 'Beat This Caption';
    
    $this->cMap['Home/Home/STUFF/Articles/Articles Subchannel 1'] = 'Gadgets';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/Dumb Stuff'] = 'Travel';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/Eat Out and Drink Up'] = 'Travel';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/Get There'] = 'Travel';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/Look Awesome'] = 'Grooming';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/Stuff'] = 'Gadgets';
    $this->cMap['Home/Home/STUFF/Guy\`s Guide to Spring Break/True Stories of Spring Break'] = 'Travel';
    
    $this->cMap['Home/MOVIES'] = 'Movies';
    $this->cMap['Home/MOVIES/Articles'] = 'Movies';
    $this->cMap['Home/MOVIES/Features'] = 'Movies';
    $this->cMap['Home/MOVIES/Reviews'] = 'Movies';
    $this->cMap['Home/MOVIES/Slideshows'] = 'Movies';
    $this->cMap['Home/MOVIES/Videos'] = 'Movies';
    
    $this->cMap['Home/MUSIC'] = 'Music';
    $this->cMap['Home/MUSIC/Articles'] = 'Music';
    $this->cMap['Home/MUSIC/Reviews'] = 'Music';
    $this->cMap['Home/MUSIC/Slideshows'] = 'Music';
    $this->cMap['Home/MUSIC/Videos'] = 'Entertainment Videos';
    
    $this->cMap['Home/SPORTS'] = 'Sports';
    $this->cMap['Home/SPORTS/Articles'] = 'Sports';
    $this->cMap['Home/SPORTS/Dirty Briefs'] = 'The Dump Blog';
    $this->cMap['Home/SPORTS/Maximum Warrior'] = 'Maximum Warrior';
    $this->cMap['Home/SPORTS/Reviews'] = 'Reviews';
    $this->cMap['Home/SPORTS/Features'] = 'Sports';
    $this->cMap['Home/SPORTS/Slideshows'] = 'Sports';
    $this->cMap['Home/SPORTS/Videos'] = 'Sports';

    $this->cMap['Home/STUFF'] = 'Gadgets & Rides';
    $this->cMap['Home/STUFF/2011 Tech Buying Guide'] = 'Gift Guides';
    $this->cMap['Home/STUFF/A Drink With Maxim'] = 'Booze';
    $this->cMap['Home/STUFF/Adam Richamn\'s Grub Guide'] = 'Food';
    $this->cMap['Home/STUFF/Articles'] = 'Gadgets';
    $this->cMap['Home/STUFF/Dads and Grads Gift Guide'] = 'Gift Guides';
    $this->cMap['Home/STUFF/Eat to the Beat'] = 'Food';
    $this->cMap['Home/STUFF/Great American Bar Search'] = 'Booze';
    $this->cMap['Home/STUFF/Guy\'s Guide to Spring Break'] = 'Travel';
    $this->cMap['Home/STUFF/Guy\'s Guide to Summer'] = 'Travel';
    $this->cMap['Home/STUFF/Slideshows'] = 'Rides';
    $this->cMap['Home/STUFF/The Real Guy\'s Guide'] = 'Clothes';
    $this->cMap['Home/STUFF/Videos'] = 'Gadgets & Rides';
    $this->cMap['Home/STUFF/Reviews'] = 'Gadgets & Rides';
    
    $this->cMap['Home/TV'] = 'TV';
    $this->cMap['Home/TV/Articles'] = 'TV';
    $this->cMap['Home/TV/Reviews'] = 'TV';
    $this->cMap['Home/TV/Slideshows'] = 'TV';
    $this->cMap['Home/TV/Videos'] = 'TV';
    
    $this->cMap['Home/VIDEO'] = 'Maxim TV';
    $this->cMap['Home/VIDEO/Gaming'] = 'Gaming';
    $this->cMap['Home/VIDEO/Girls'] = 'Girls';
    $this->cMap['Home/VIDEO/Hometown Hotties'] = 'Hometown Hotties';
    $this->cMap['Home/VIDEO/Humor'] = 'Stupid Clips';
    $this->cMap['Home/VIDEO/Movies'] = 'Movies';
    $this->cMap['Home/VIDEO/Music Videos'] = 'Music';
    $this->cMap['Home/VIDEO/Reviews'] = 'TV'; 
    $this->cMap['Home/VIDEO/Sports'] = 'The Big Leagues';
    $this->cMap['Home/VIDEO/Television'] = 'TV'; 

  }
}

